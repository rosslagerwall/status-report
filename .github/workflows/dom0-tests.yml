#--------------------------------------------------------------------------------------
# This GitHub Actions workflow tests xen-bugtool in a Dom0-based self-hosted runner.
# Runs the checks when an authorized user comments the PR with: /run checks in dom0
#--------------------------------------------------------------------------------------
name: Run automated tests in Dom0
on:
  issue_comment:
    types: [created, edited]

permissions:
  # id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
  statuses: write
  # issues: write
  pull-requests: write # For reporting the test results as a comment to the PR

jobs:
  pr_commented:
    name: Run checks when bernhardkaindl comments PR with "/run checks in dom0".
    if: |
      ${{ contains(fromJson('["bernhardkaindl", "rosslagerwall"]'), github.actor) &&
          contains(github.event.comment.body, '/run checks in dom0') &&
          github.event.issue.pull_request }}
    runs-on: Dom0  # self-hosted runners with label: Dom0
    steps:
      # Comment-triggered actions run on the default branch. Get the PR comment branch:
      # https://dev.to/zirkelc/trigger-github-workflow-for-comment-on-pull-request-45l2
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      # This updates the status display and shows that this workflow is running now:
      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending

      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Run test for getting RRDs in Dom0
        run: |
          rm -rf   .tmp
          mkdir -p .tmp
          cd       .tmp
          set -x
          sudo python2 ~-/xen-bugtool -ys --entries=persistent-stats --output=tar --outfd=1 >bugtool.tar
          tar xvf bugtool.tar --strip-components=1
          find * -type f -print0 | xargs -0 ls -l

          # Check the RRD files:
          dom0label="Control domain on host: $HOSTNAME"
          uuid=`xe vm-list params=uuid name-label="$dom0label" --minimal`
          file xapi_rrd-$uuid.out | grep "XML 1.0 document"
          file xapi_rrd-host.out  | grep "XML 1.0 document"
          xmllint xapi_rrd-$uuid.out >/dev/null
          xmllint xapi_rrd-host.out  >/dev/null
          popd

      - name: Check if xen-bugtool -y --all succeeds in Dom0
        run: |
          rm -rf   .tmp
          mkdir -p .tmp
          pushd    .tmp
          set -x
          python2      ~-/xen-bugtool --help
          python2      ~-/xen-bugtool --capabilities
          sudo python2 ~-/xen-bugtool --yestoall --silent --output=tar --outfd=1 >bugtool.tar
          tar xvf bugtool.tar --strip-components=1

          # Check the RRD files:
          find * -type f -print0 | xargs -0 ls -l
          dom0label="Control domain on host: $HOSTNAME"
          uuid=`xe vm-list params=uuid name-label="$dom0label" --minimal`
          file xapi_rrd-$uuid.out | grep "XML 1.0 document"
          file xapi_rrd-host.out  | grep "XML 1.0 document"
          xmllint xapi_rrd-$uuid.out >/dev/null
          xmllint xapi_rrd-host.out  >/dev/null
          # TODO: Run more checks of the generated output (for python2to3 conversion)
          popd

      # This will mark this workflow as either passed or failed:
      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}

      # The comment could contain additional information from the test execution.
      # For now, it just gives feedback that the request /run dom0 tests is completed.
      - name: Add the confirmation about the test results to the commented pull request
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow   }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })